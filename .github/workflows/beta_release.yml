# This is a basic workflow to help you get started with Actions

name: Beta release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  push:
    branches:
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Publish-and-release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.16.0
      - name: Save release version to outputs
        id: save_release_version
        run: echo ::set-output name=version::$(node -pe "require('./package.json').version")
      - name: Preparing environment
        id: setup_environment
        run: npm install -g yarn
      - name: Installing modules
        id: install_modules
        run: |
          yarn install
      - name: Build
        id: build
        run: ./node_modules/.bin/tsc
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: beta
          access: public
      - name: Create a release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.save_release_version.outputs.version }}
          release_name: v${{ steps.save_release_version.outputs.version }}
          body: v${{ steps.save_release_version.outputs.version }}
          draft: false
          prerelease: false
      - name: Slack notification
        uses: Foxhoundn/slack@v1.2.94
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: ReQore Publish & Release
          SLACK_MESSAGE: ":white_check_mark: Release *v${{ steps.save_release_version.outputs.version }}* successfuly created & published!"
      - name: Slack notification
        uses: Foxhoundn/slack@v1.2.94
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: ReQore Publish & Release
          SLACK_MESSAGE: ":exclamation: There was an error creating release *v${{ steps.save_release_version.outputs.version }}*. Please check the steps below."
